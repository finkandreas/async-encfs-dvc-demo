# input policy for DVC stage generation

app:
  name: &app_name in_original
  code_root: &code_root "\\$(git rev-parse --show-toplevel)/examples/ex_in"

  # defaults for SLURM, can be overriden in merged mappings
  slurm_defaults: &slurm_defaults
    # environment configuration in sbatch script before srun (only stage supported)
    stage_env: |
      module load daint-gpu
      module load PyTorch
      export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK
    dvc:  # sbatch options
      --cpus-per-task: 24
      --constraint: mc
      --time: '4:00:00'
    all:  # sbatch options
      --account: csstaff

  stages:
    fetch_cifar10:
      type: in_stage
      script: [*code_root, fetch_cifar10.py]
      output_fetch_cifar10:
        dataset: &output_dataset_name cifar10
        subset: &output_subset_name '.'

      slurm_opts:  # run with SLURM
        <<: *slurm_defaults
        stage:  # sbatch options
          --nodes: 1
          --ntasks: 1
          --cpus-per-task: 12
          --constraint: gpu
          --time: '4:00:00'


include:
  dvc_root: ".dvc_policies/repo/dvc_root.yaml"
  in_stage: ".dvc_policies/stages/dvc_in.yaml"

# DVC repo configuration with encfs-encryption

host_data:
  dvc_root: &dvc_root_host ../..  # output of `dvc root`
  dvc_config: &dvc_config_host config
  mount:  # relative to dvc_root_host
    data:
      type: encfs
      origin: encrypt
      default_target: &mount_data_host decrypt  # make sure this is a dvc-repo-specific path if it is absolute
      custom_target:  # machine-specific
        - machine: ['daint[\d]+', 'nid[\d]+'] # TODO: Alps
          target: /tmp/encfs_$(id -u)_async_encfs_dvc  # make sure this is a dvc-repo-specific path if using multiple encfs-repos

# An input stage for original data
# Serves both for data fetched from external sources as well as as a workaround
# for the missing --file option of dvc add in newer releases

in_stage:
  # no data dependencies
  output:  # output data
    in:
      stage_data: &output_in [in, *output_dataset_name, original, *output_subset_name, output]
      command_line_options:
        --in-output: *output_in

  dvc: [*output_in, ".."]

original:
  file: "$(dvc root)/../../ex_in/23-10-04_15-39-41_daint101_lukasd_dvc_app.yaml"  # source of this DVC app stage configuration
  run_label: "23-10-04_15-39-41_daint101_lukasd"  # original run_label used

